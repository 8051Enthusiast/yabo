<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>YphbtWindow</class>
 <widget class="QMainWindow" name="YphbtWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>640</width>
    <height>480</height>
   </rect>
  </property>
  <property name="font">
   <font>
    <family>Monospace</family>
    <pointsize>12</pointsize>
   </font>
  </property>
  <property name="windowTitle">
   <string>yphbt</string>
  </property>
  <widget class="QWidget" name="centralwidget">
   <layout class="QHBoxLayout" name="horizontalLayout">
    <item>
     <widget class="QSplitter" name="splitter_3">
      <property name="orientation">
       <enum>Qt::Horizontal</enum>
      </property>
      <widget class="QSplitter" name="splitter_2">
       <property name="orientation">
        <enum>Qt::Vertical</enum>
       </property>
       <widget class="SourceEditor" name="plainTextEdit">
        <property name="plainText">
         <string>import list

# a parser for the rough structure of a png

def *chunk(ty: *[u8], data_parser: *'t) = {
  length: u32b
  type: [4] |&gt; ty?
  value: [length] |&gt; data_parser!
  crc: u32b
}

def *head = {
  width: u32b
  height: u32b
  bit_depth: u8
  color_type: u8
  compression_method: u8
  filter_method: u8
  interlace_method: u8
}

def *rgb = {
  red: u8
  green: u8
  blue: u8
}

export
def *main = {
  h/89 50 4e 47 0d 0a 1a 0a/

  header: chunk(/IHDR/, head)!

  chunks: list.list({
    | palette: chunk(/PLTE/, rgb[..])?
    | data: chunk(/IDAT/, [..])?
    | optional: chunk(/[a-z].{3}/, [..])?
  })
  end: chunk(/IEND/, nil)!
}
</string>
        </property>
       </widget>
       <widget class="CompilerErrorView" name="errorView">
        <property name="enabled">
         <bool>true</bool>
        </property>
        <property name="font">
         <font>
          <family>DejaVu Sans Mono</family>
          <pointsize>12</pointsize>
          <italic>false</italic>
          <bold>false</bold>
         </font>
        </property>
        <property name="lineWrapMode">
         <enum>QTextEdit::NoWrap</enum>
        </property>
        <property name="readOnly">
         <bool>true</bool>
        </property>
        <property name="textInteractionFlags">
         <set>Qt::TextSelectableByMouse</set>
        </property>
       </widget>
      </widget>
      <widget class="QSplitter" name="splitter">
       <property name="orientation">
        <enum>Qt::Vertical</enum>
       </property>
       <widget class="HexTableView" name="tableView">
        <property name="verticalScrollBarPolicy">
         <enum>Qt::ScrollBarAsNeeded</enum>
        </property>
        <property name="alternatingRowColors">
         <bool>true</bool>
        </property>
        <property name="selectionMode">
         <enum>QAbstractItemView::NoSelection</enum>
        </property>
        <property name="showGrid">
         <bool>false</bool>
        </property>
        <attribute name="horizontalHeaderDefaultSectionSize">
         <number>50</number>
        </attribute>
        <attribute name="verticalHeaderVisible">
         <bool>true</bool>
        </attribute>
        <attribute name="verticalHeaderHighlightSections">
         <bool>false</bool>
        </attribute>
       </widget>
       <widget class="ValTreeView" name="treeView"/>
      </widget>
     </widget>
    </item>
   </layout>
  </widget>
  <widget class="QToolBar" name="toolBar">
   <property name="windowTitle">
    <string>toolBar</string>
   </property>
   <attribute name="toolBarArea">
    <enum>TopToolBarArea</enum>
   </attribute>
   <attribute name="toolBarBreak">
    <bool>false</bool>
   </attribute>
   <addaction name="actionCompile"/>
   <addaction name="actionLoadFile"/>
   <addaction name="separator"/>
   <addaction name="actionBack"/>
   <addaction name="actionForth"/>
  </widget>
  <action name="actionCompile">
   <property name="text">
    <string>Compile</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+S</string>
   </property>
  </action>
  <action name="actionLoadFile">
   <property name="text">
    <string>Open File</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+O</string>
   </property>
  </action>
  <action name="actionBack">
   <property name="text">
    <string>Back</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+Z</string>
   </property>
  </action>
  <action name="actionForth">
   <property name="text">
    <string>Forth</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+R</string>
   </property>
  </action>
  <action name="actionEnsizen">
   <property name="text">
    <string>+</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+=</string>
   </property>
  </action>
  <action name="actionDesizen">
   <property name="text">
    <string>-</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+-</string>
   </property>
  </action>
 </widget>
 <customwidgets>
  <customwidget>
   <class>CompilerErrorView</class>
   <extends>QTextEdit</extends>
   <header>compiler_error_view.hpp</header>
  </customwidget>
  <customwidget>
   <class>HexTableView</class>
   <extends>QTableView</extends>
   <header>hexview.hpp</header>
  </customwidget>
  <customwidget>
   <class>ValTreeView</class>
   <extends>QTreeView</extends>
   <header>valtreeview.hpp</header>
  </customwidget>
  <customwidget>
   <class>SourceEditor</class>
   <extends>QPlainTextEdit</extends>
   <header>sourceeditor.hpp</header>
  </customwidget>
 </customwidgets>
 <resources/>
 <connections/>
</ui>
