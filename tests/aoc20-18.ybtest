====[ source code ]====
import aoc
import text

fun *reduce_impl(init: 't, cont: *'t('t)): 't = {
  | next: cont(init)?
    return: reduce_impl(next, cont)
  | let return = init
}

fun *reduce(init: *'t, cont: *'t('t)): 't = {
  start: init?
  return: reduce_impl(start, cont)
}

fun *atom: int = {
  | return: text.num?
  | /\(/, return: expr, /\)/
}

fun *expr_cont(lhs: int): int = {
  | / \+ /, rhs: atom
    let return = lhs + rhs
  | / \* /, rhs: atom
    let return = lhs * rhs
}

fun *expr: int = reduce(atom, expr_cont)?

export
fun *test = aoc.summap({
  return: expr?, text.newline?
})

====[ text 1 ]====
1 + 2 * 3 + 4 * 5 + 6
#
====[ output 1 ]====
71

====[ text 2 ]====
1 + (2 * 3) + (4 * (5 + 6))
#
====[ output 2 ]====
51

====[ text 3 ]====
2 * 3 + (4 * 5)
5 + (8 * 3 + 9 + 3 * 4 * 3)
5 * 9 * (7 * 3 * 3 + 9 * 3 + (8 + 6 * 4))
((2 + 4 * 9) * (6 + 9 * 8 + 6) + 6) + 2 + 4 * 2
#

====[ output 3 ]====
26335