====[ source code ]====
fun ['t] ~> lift2(f: ('a0, 'a1) -> 'r, a0: ['t] ~> 'a0, a1: ['t] ~> 'a1) = {
  res0: a0?, res1: a1?, let return = f?(res0, res1)
}
fun ['t] ~> alt(a0: ['t] ~> 'r, a1: ['t] ~> 'r) = {
  | return: a0?
  | return: a1?
}

fun ['t] ~> pure(v: 'r) = {let return = v}

export
fun ~test = alt(lift2(<a, b> a + b, u16l is !eof, test), pure(0))

====[ binary 1 ]====
01 02 03 04

====[ output 1 ]====
1540

====[ binary 2 ]====
ff

====[ output 2 ]====
0

====[ binary 3 ]====
ff ff ff ff

====[ output 3 ]====
131070

====[ binary 4 ]====
ff ff ff ff ff ff ff

====[ output 4 ]====
196605