====[ source code ]====
fun [T] ~> lift2[R, T, A0, A1](f: (A0, A1) -> R, a0: [T] ~> A0, a1: [T] ~> A1) = {
  res0: a0?, res1: a1?, let return = f?(res0, res1)
}
fun [T] ~> alt[R, T](a0: [T] ~> R, a1: [T] ~> R) = {
  | return: a0?
  \ return: a1?
}

fun [T] ~> pure[R, T](v: R) = {let return = v}

export
fun ~test = alt(lift2(<a, b> a + b, u16l is !eof, test), pure(0))

====[ binary 1 ]====
01 02 03 04

====[ output 1 ]====
1540

====[ binary 2 ]====
ff

====[ output 2 ]====
0

====[ binary 3 ]====
ff ff ff ff

====[ output 3 ]====
131070

====[ binary 4 ]====
ff ff ff ff ff ff ff

====[ output 4 ]====
196605