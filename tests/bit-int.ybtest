====[ source code ]====
import bit

export
def *test = {
  bytes: [..]
  let msb_bytes = bytes *> bit.from_bytes_msb
  let lsb_bytes = bytes *> bit.from_bytes_lsb
  let return = {:
    let signed_msb_byte_msb = msb_bytes *> bit.sint_msb(4)[..]
    let signed_msb_byte_lsb = lsb_bytes *> bit.sint_msb(4)[..]
    let signed_lsb_byte_msb = msb_bytes *> bit.sint_lsb(4)[..]
    let signed_lsb_byte_lsb = lsb_bytes *> bit.sint_lsb(4)[..]
    let unsigned_msb_byte_msb = msb_bytes *> bit.uint_msb(4)[..]
    let unsigned_msb_byte_lsb = lsb_bytes *> bit.uint_msb(4)[..]
    let unsigned_lsb_byte_msb = msb_bytes *> bit.uint_lsb(4)[..]
    let unsigned_lsb_byte_lsb = lsb_bytes *> bit.uint_lsb(4)[..]
  :}
}

====[ binary 1 ]====
01 23 45 67 89 AB CD EF

====[ output 1 ]====
{
  "signed_lsb_byte_lsb": [1, 0, 3, 2, 5, 4, 7, 6, -7, -8, -5, -6, -3, -4, -1, -2],
  "signed_lsb_byte_msb": [0, -8, 4, -4, 2, -6, 6, -2, 1, -7, 5, -3, 3, -5, 7, -1],
  "signed_msb_byte_lsb": [-8, 0, -4, 4, -6, 2, -2, 6, -7, 1, -3, 5, -5, 3, -1, 7],
  "signed_msb_byte_msb": [0, 1, 2, 3, 4, 5, 6, 7, -8, -7, -6, -5, -4, -3, -2, -1],
  "unsigned_lsb_byte_lsb": [1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14],
  "unsigned_lsb_byte_msb": [0, 8, 4, 12, 2, 10, 6, 14, 1, 9, 5, 13, 3, 11, 7, 15],
  "unsigned_msb_byte_lsb": [8, 0, 12, 4, 10, 2, 14, 6, 9, 1, 13, 5, 11, 3, 15, 7],
  "unsigned_msb_byte_msb": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
}
